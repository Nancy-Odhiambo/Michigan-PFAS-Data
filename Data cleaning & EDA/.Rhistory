plot.caption = element_text(face = "bold"),
legend.position = "none")
# Top 10 analyte category by total % & absolute concentration
surface_water_long |>
filter(analyte_value > 0) |>
group_by(analyte) |>
summarize(total_concentration = sum(analyte_value, na.rm = TRUE)) |>
ungroup() |>
mutate(share = total_concentration / sum(total_concentration)) |>
slice_max(share, n = 10) |>
ggplot(aes(x = fct_reorder(analyte, share),
y = share,
fill = share)) +
geom_col() +
geom_text(aes(
label = paste0(
percent(share, accuracy = 0.1),
" (", comma(round(total_concentration, 1)), " ng/L)"
)),
hjust = -0.05, size = 3.2
) +
coord_flip() +
scale_y_continuous(labels = percent_format(accuracy = 1),
expand = expansion(mult = c(0, 0.15))) +
scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 20)) +
scale_fill_viridis_c(option = "cividis", direction = -1) +
labs(title = "Top 10 PFAS Analytes in Surface Water",
x = "Analyte_Category",
y = "Share of Total PFAS Concentration",
fill = "Share",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_minimal() +
theme(plot.title = element_text(face = "bold", size = 15),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
plot.caption = element_text(face = "bold"),
legend.position = "none")
# Map of average surface water PFAS by county
# Load county shapefile
mi_counties <- st_read("cb_2018_us_county_500k.shp") |>
filter(STATEFP == "26")
# Aggregate public water PFAS by county
public_county_map <- public_water_long |>
group_by(geoid) |>
summarize(mean_value = mean(analyte_value, na.rm = TRUE), .groups = "drop") |>
left_join(mi_counties, by = c("geoid" = "GEOID")) |>
st_as_sf()
ggplot(public_county_map) +
geom_sf(aes(fill = mean_value), color = "white") +
scale_fill_viridis_c(option = "magma", na.value = "grey90") +
labs(
title = "Mean PFAS Concentration in Public Water by County",
fill = "Mean PFAS (ng/L)",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal()
# Top 10 public water systems by mean PFAS
public_water_top10 <- public_water_long |>
group_by(system_name) |>
summarize(mean_value = mean(analyte_value, na.rm = TRUE)) |>
ungroup() |>
slice_max(order_by = mean_value, n = 10)
# Improved bar plot
ggplot(public_water_top10, aes(x = fct_reorder(system_name, mean_value), y = mean_value, fill = mean_value)) +
geom_col() +
geom_text(aes(label = round(mean_value, 2)), hjust = -0.1, size = 3.5) +
coord_flip() +
scale_fill_viridis_c(option = "viridis", direction = -1) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 25)) +
labs(
title = "Top 10 Public Water Systems by Mean PFAS",
x = "Public Water System",
y = "Mean PFAS (ng/L)",
fill = "Mean PFAS",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
expand_limits(y = max(public_water_top10$mean_value) * 1.1)
# Top 10 PFAS analytes in public water
top_analytes <- public_water_long |>
filter(analyte_value > 0) |>
group_by(analyte) |>
summarize(total_concentration = sum(analyte_value, na.rm = TRUE), .groups = "drop") |>
slice_max(total_concentration, n = 10)
# Improved bar plot
ggplot(top_analytes, aes(x = fct_reorder(analyte, total_concentration),
y = total_concentration,
fill = total_concentration)) +
geom_col() +
geom_text(aes(label = comma(round(total_concentration, 1))),
hjust = -0.05, size = 3.5) +  # labels outside bars
coord_flip() +
scale_fill_viridis_c(option = "cividis", direction = -1) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +  # wrap long names
labs(
title = "Top 10 PFAS Analytes in Public Water Systems",
x = "PFAS Analyte",
y = "Total PFAS Concentration (ng/L)",
fill = "Total Concentration",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold"),
legend.position = "none"
) +
expand_limits(y = max(top_analytes$total_concentration) * 1.1)  # space for labels
# Map of average public water PFAS by county
public_county_map <- public_water_long |>
group_by(geoid) |>
summarize(mean_value = mean(analyte_value, na.rm = TRUE), .groups = "drop") |>
left_join(mi_counties, by = c("geoid" = "GEOID")) |>
st_as_sf()
ggplot(public_county_map) +
geom_sf(aes(fill = mean_value), color = "white") +
scale_fill_viridis_c(option = "magma", na.value = "grey90") +
labs(
title = "Mean PFAS Concentration in Public Water by County",
x = "Longitude",
y = "Latitude",
fill = "Mean PFAS (ng/L)",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_minimal()
# Top 10 counties by PFAS site count
sites_top10_counties <- pfas_sites |>
count(county, sort = TRUE) |>
slice_max(n, n = 10)
# Improved bar plot with proper label positioning
ggplot(sites_top10_counties, aes(x = fct_reorder(county, n), y = n, fill = n)) +
geom_col() +
geom_text(aes(label = n), hjust = -0.02, size = 3.5) +  # slightly closer to bar
coord_flip() +
scale_fill_viridis_c(option = "viridis", direction = -1) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Top 10 Counties by Number of PFAS Sites",
x = "County",
y = "Number of PFAS Sites",
fill = "Site Count",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold"),
legend.position = "none"
)
# Map of PFAS sites across Michigan
pfas_sites_sf <- pfas_sites |>
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) |>
mutate(type = str_replace_all(type, "mlitary", "military"),
type = str_to_title(type))
ggplot() +
geom_sf(data = mi_counties, fill = "grey90", color = "white") +
geom_sf(data = pfas_sites_sf, aes(color = type), size = 1.5, alpha = 0.7) +
scale_color_viridis_d() +
labs(
title = "PFAS Sites Across Michigan",
color = "Site Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal()
# Number of PFAS sites per type
pfas_sites |>
mutate(type = str_replace_all(type, "mlitary", "military"),
type = str_to_title(type)) |>
count(type, sort = TRUE) |>
ggplot(aes(x = fct_reorder(type, n), y = n, fill = n)) +
geom_col() +
geom_text(aes(label = n),
hjust = -0.05,  # slightly outside the bar
size = 3.5) +
coord_flip() +
scale_fill_viridis_c(option = "cividis") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) +  # add 15% space at top
labs(
title = "Number of PFAS Sites by Type",
x = "Site Type",
y = "Number of Sites",
fill = "Count",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
# Aggregate surface water PFAS by county
surface_county <- surface_water_long |>
group_by(geoid) |>
summarize(mean_surface = mean(analyte_value, na.rm = TRUE),
n_surface_samples = n()) |>
ungroup()
# Aggregate public water PFAS by county
public_county <- public_water_long |>
group_by(geoid) |>
summarize(mean_public = mean(analyte_value, na.rm = TRUE),
n_public_samples = n()) |>
ungroup()
# Aggregate PFAS sites count by county
sites_county <- pfas_sites |>
group_by(geoid) |>
summarize(n_sites = n()) |>
ungroup()
# County shapefile
counties_sf <- st_read("cb_2018_us_county_500k.shp") |>
st_drop_geometry() |>
select(GEOID, NAME)
# Converting geoid to character
surface_county <- surface_county |> mutate(geoid = as.character(geoid))
public_county  <- public_county  |> mutate(geoid = as.character(geoid))
sites_county   <- sites_county   |> mutate(geoid = as.character(geoid))
# Joining data sets
county_combined <- surface_county |>
full_join(public_county, by = "geoid") |>
full_join(sites_county, by = "geoid")
# Summary tables
county_summary <- county_combined |>
left_join(counties_sf, by = c("geoid" = "GEOID")) |>
relocate(NAME, .before = geoid) |>
select(NAME, mean_surface, n_surface_samples, mean_public, n_public_samples, n_sites) |>
arrange(desc(mean_surface))
# Flextable for first 10 counties
top10_county_table <- county_summary |> slice_head(n = 10)
flextable(top10_county_table) |> autofit()
# Faceted bar for the top 10 counties
county_long <- top10_county_table |>
pivot_longer(cols = c(mean_surface, mean_public, n_sites),
names_to = "metric", values_to = "value") |>
group_by(metric) |>
mutate(NAME = reorder(NAME, value)) |>
ungroup()
# Custom y-axis labels for each metric
metric_labels <- c(
mean_surface = "Mean Surface PFAS (ng/L)",
mean_public = "Mean Public PFAS (ng/L)",
n_sites = "Number of PFAS Sites")
county_long |>
ggplot(aes(x = NAME, y = value, fill = metric)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(value, 2)),
hjust = -0.1, size = 4, color = "black") +
facet_wrap(~ metric, scales = "free_y", labeller = labeller(metric = metric_labels)) +
coord_flip(clip = "off") +
scale_fill_manual(values = c("steelblue", "tomato", "darkgreen")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.15)), breaks = NULL) +
labs(x = "County",
y = NULL,  # removing the y-axis title
title = "Top 10 Counties by Metric: Surface & Public PFAS and Number of Sites",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_minimal() |>
theme(plot.title = element_text(size = 14, face = "bold"),
plot.caption = element_text(size = 10, face = "bold"),
axis.text.y = element_text(face = "bold"))
# --- TOTAL CONCENTRATIONS ---
pfas_total <- surface_water_long |>
filter(!is.na(analyte_value)) |>
summarize(surface_total = sum(analyte_value, na.rm = TRUE)) |>
bind_cols(
public_water_long |>
filter(!is.na(analyte_value)) |>
summarize(public_total = sum(analyte_value, na.rm = TRUE))
) |>
pivot_longer(everything(),
names_to = "source",
values_to = "concentration") |>
mutate(source = recode(source,
surface_total = "Surface Water",
public_total = "Public Water"),
pct = concentration / sum(concentration) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)"))
# Pie chart: Total concentration
pfas_total |>
ggplot(aes(x = "", y = concentration, fill = source)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl),
position = position_stack(vjust = 0.5),
fontface = "bold", color = "white") +
labs(title = "PFAS Concentration by Water Source (Total)",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "none")
# --- (1) RAW TOTALS ---
pfas_raw <- surface_water_long |>
filter(!is.na(analyte_value)) |>
summarize(surface_total = sum(analyte_value, na.rm = TRUE)) |>
bind_cols(
public_water_long |>
filter(!is.na(analyte_value)) |>
summarize(public_total = sum(analyte_value, na.rm = TRUE))
) |>
pivot_longer(everything(),
names_to = "source",
values_to = "concentration") |>
mutate(source = recode(source,
surface_total = "Surface Water",
public_total = "Public Water"),
pct = concentration / sum(concentration) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)"))
plot_raw <- pfas_raw |>
ggplot(aes(x = "", y = concentration, fill = source)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl),
position = position_stack(vjust = 0.5),
fontface = "bold", color = "white") +
labs(title = "PFAS by Water Source\n(Raw Totals)") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "none")
# --- (2) COUNTY-LEVEL AGGREGATES ---
pfas_county <- bind_rows(
surface_wide_county |> mutate(source = "Surface Water"),
public_wide_county  |> mutate(source = "Public Water")
) |>
group_by(source) |>
summarize(total_mean = sum(mean_value, na.rm = TRUE)) |>
mutate(pct = total_mean / sum(total_mean) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)"))
#--- 1️⃣ Combine FULL totals across ALL analytes ------------------
pfas_total <- bind_rows(
surface_water_long |>
summarise(total = sum(analyte_value, na.rm = TRUE)) |>
mutate(source = "Surface Water"),
public_water_long |>
summarise(total = sum(analyte_value, na.rm = TRUE)) |>
mutate(source = "Public Water")
) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)"))
p1 <- ggplot(pfas_total, aes(x = "", y = total, fill = source)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 4) +
labs(title = "Total PFAS Accumulation\n(All Analytes)",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
#--- 2️⃣ County-level means aggregated across ALL analytes ----------
pfas_county <- bind_rows(
surface_water_long |>
group_by(county, analyte) |>
summarise(mean_value = mean(analyte_value, na.rm = TRUE), .groups = "drop") |>
mutate(source = "Surface Water"),
public_water_long |>
group_by(county, analyte) |>
summarise(mean_value = mean(analyte_value, na.rm = TRUE), .groups = "drop") |>
mutate(source = "Public Water")
) |>
group_by(source) |>
summarise(total_mean = sum(mean_value, na.rm = TRUE), .groups = "drop") |>
mutate(pct = total_mean / sum(total_mean) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)"))
library(tidyverse)
# Combine surface and public water data
pfas_totals_all <- bind_rows(
surface_water_long |> mutate(source = "Surface Water"),
public_water_long |> mutate(source = "Public Water")
) |>
filter(!is.na(analyte_value)) |>
group_by(source) |>                     # just group by 'source'
summarize(total_concentration = sum(analyte_value, na.rm = TRUE)) |>
mutate(
pct = total_concentration / sum(total_concentration) * 100,
lbl = paste0(source, " (", round(pct, 1), "%)")
)
# Pie chart
ggplot(pfas_totals_all, aes(x = "", y = total_concentration, fill = source)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl),
position = position_stack(vjust = 0.5),
color = "white",
fontface = "bold",
size = 5) +
labs(
title = "Total PFAS Concentration by Water Source (All Analytes)",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 15),
plot.caption = element_text(face = "bold"),
legend.position = "none"
)
# Visualizing total PFAS concetrations and types of analytes
# 1. Total PFAS by water type
total_pfas <- bind_rows(
surface_water_long |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Surface Water"),
public_water_long  |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Public Water")
) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(water_type, " (", round(pct, 1), "%)"))
pie_total <- total_pfas |>
ggplot(aes(x = "", y = total, fill = water_type)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 4) +
scale_fill_manual(values = c("Surface Water" = "steelblue", "Public Water" = "tomato")) +
labs(title = "Total PFAS by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(face = "bold"))
# 2. Combined analyte composition by water type
analyte_combined <- bind_rows(
surface_water_long |> filter(analyte_value > 0) |> group_by(analyte) |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Surface Water"),
public_water_long  |> filter(analyte_value > 0) |> group_by(analyte) |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Public Water")
) |>
group_by(water_type) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(analyte, " (", round(pct, 1), "%)")) |>
ungroup()
pie_analyte <- analyte_combined |>
ggplot(aes(x = "", y = total, fill = analyte)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 2.5) +
facet_wrap(~water_type) +
labs(title = "PFAS Analyte Composition by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(face = "bold"),
legend.position = "none")
# Combine with patchwork
pie_total + pie_analyte + plot_layout(ncol = 1, heights = c(1, 2))
# 1. Total PFAS concentration by water type (same as before)
total_pfas <- bind_rows(
surface_water_long |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Surface Water"),
public_water_long  |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Public Water")
) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(water_type, " (", round(pct, 1), "%)"))
pie_total <- total_pfas |>
ggplot(aes(x = "", y = total, fill = water_type)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 4) +
scale_fill_manual(values = c("Surface Water" = "steelblue", "Public Water" = "tomato")) +
labs(title = "Total PFAS by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(face = "bold"))
# 2. Count of analyte types by water type
analyte_counts <- bind_rows(
surface_water_long |> count(analyte) |> mutate(water_type = "Surface Water"),
public_water_long  |> count(analyte) |> mutate(water_type = "Public Water")
) |>
group_by(water_type) |>
mutate(pct = n / sum(n) * 100,
lbl = paste0(analyte, " (", n, ")")) |>
ungroup()
pie_counts <- analyte_counts |>
ggplot(aes(x = "", y = n, fill = analyte)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 2.5) +
facet_wrap(~water_type) +
labs(title = "PFAS Analyte Counts by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(face = "bold"),
legend.position = "none")
# Combine both pies vertically
pie_total + pie_counts + plot_layout(ncol = 1, heights = c(1, 2))
# 1. Total PFAS concentration by water type (same as before)
total_pfas <- bind_rows(
surface_water_long |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Surface Water"),
public_water_long  |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Public Water")
) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(water_type, " (", round(pct, 1), "%)"))
pie_total <- total_pfas |>
ggplot(aes(x = "", y = total, fill = water_type)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 4) +
scale_fill_manual(values = c("Surface Water" = "steelblue", "Public Water" = "tomato")) +
labs(title = "Total PFAS by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 14),
plot.caption = element_text(face = "bold"))
# Total PFAS concentration by water type
total_pfas <- bind_rows(
surface_water_long |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Surface Water"),
public_water_long  |> summarize(total = sum(analyte_value, na.rm = TRUE)) |> mutate(water_type = "Public Water")
) |>
mutate(pct = total / sum(total) * 100,
lbl = paste0(water_type, " (", round(pct, 1), "%)"))
# Pie chart
total_pfas |>
ggplot(aes(x = "", y = total, fill = water_type)) +
geom_col(width = 1, color = "white") +
coord_polar(theta = "y") +
geom_text(aes(label = lbl), position = position_stack(vjust = 0.5), size = 5) +
scale_fill_manual(values = c("Surface Water" = "steelblue", "Public Water" = "tomato")) +
labs(title = "Total PFAS Concentration by Water Type",
caption = "Data source: Michigan PFAS Action Response Team (MPART), EGLE") +
theme_void() +
theme(plot.title = element_text(face = "bold", size = 16),
plot.caption = element_text(face = "bold"))
